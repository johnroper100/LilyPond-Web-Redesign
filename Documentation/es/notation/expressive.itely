@c -*- coding: utf-8; mode: texinfo; documentlanguage: es -*-
@ignore
    Translation of GIT committish: 21be03e4b893ec2bbea745a713360310931337b9

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore

@c \version "2.19.21"

@node Expresiones
@section Expresiones
@translationof Expressive marks

@lilypondfile[quote]{expressive-headword.ly}

Esta sección relaciona diversas marcas de expresión que se pueden
crear en un a partitura.

@menu
* Expresiones adosadas a las notas::
* Expresiones como curvas::
* Expresiones como líneas::
@end menu


@node Expresiones adosadas a las notas
@subsection Expresiones adosadas a las notas
@translationof Expressive marks attached to notes

Esta sección explica cómo crear marcas expresivas que están
aplicadas a notas: articulaciones, ornamentos y matices.  También
se tratan los métodos para crear las nuevas marcas dinámicas.

@menu
* Articulaciones y ornamentos::
* Matices dinámicos::
* Indicaciones dinámicas contemporáneas::
@end menu


@node Articulaciones y ornamentos
@unnumberedsubsubsec Articulaciones y ornamentos
@translationof Articulations and ornamentations

@cindex articulaciones
@cindex ornamentación
@cindex guiones
@cindex ornamentos
@cindex espressivo
@cindex calderón
@cindex arco arriba
@cindex arco abajo
@cindex indicaciones de pedal
@cindex indicaciones de pedalero de órgano
@cindex pedal de órgano
@cindex grupeto
@cindex mordente circular
@cindex nota abierta
@cindex nota tapada
@cindex flageolet
@cindex mordente circular, inverso
@cindex trino
@cindex semitrino
@cindex mordente
@cindex prallprall
@cindex prallmordent
@cindex semitrino ascendente
@cindex semitrino descendente
@cindex mordente ascendente
@cindex mordente descendente
@cindex indicación de pulgar
@cindex segno
@cindex coda
@cindex varcoda

@funindex \accent
@funindex \marcato
@funindex \staccatissimo
@funindex \espressivo
@funindex \staccato
@funindex \tenuto
@funindex \portato
@funindex \upbow
@funindex \downbow
@funindex \flageolet
@funindex \thumb
@funindex \lheel
@funindex \rheel
@funindex \ltoe
@funindex \rtoe
@funindex \open
@funindex \halfopen
@funindex \stopped
@funindex \snappizzicato
@funindex \turn
@funindex \reverseturn
@funindex \trill
@funindex \prall
@funindex \mordent
@funindex \prallprall
@funindex \prallmordent
@funindex \upprall
@funindex \downprall
@funindex \upmordent
@funindex \downmordent
@funindex \pralldown
@funindex \prallup
@funindex \lineprall
@funindex \signumcongruentiae
@funindex \shortfermata
@funindex \fermata
@funindex \longfermata
@funindex \verylongfermata
@funindex \fermataMarkup
@funindex \segno
@funindex \coda
@funindex \varcoda


@funindex -

Se pueden adjuntar a las notas un amplio abanico de símbolos para
denotar articulaciones, adornos y otras indicaciones de ejecución,
utilizando la sintaxis siguiente:

@example
@var{nota}\@var{nombre}
@end example

La lista de los posibles valores de @code{@var{nombre}} está en
@ref{Lista de articulaciones}.  Por ejemplo:

@lilypond[verbatim,quote]
\relative {
  c''4\staccato c\mordent b2\turn
  c1\fermata
}
@end lilypond

@cindex marcato
@cindex tenuto
@cindex staccatissimo
@cindex acento
@cindex picado
@cindex staccato
@cindex portato


Algunas de estas articulaciones tienen abreviaturas que facilitan
su escritura.  Las abreviaturas se escriben detrás del nombre de
la nota, y su sintaxis consiste en un guión @code{-} seguido de un
símbolo que especifica la articulación.  Existen abreviaturas
predefinidas para el @notation{marcato}, @notation{stopped} (nota
apagada), @notation{tenuto}, @notation{staccatissimo},
@notation{accent} (acento), @notation{staccato} (picado), y
@notation{portato}.  La salida correspondiente a estas
articulaciones aparece de la siguiente manera:

@lilypond[verbatim,quote]
\relative {
  c''4-^ c-+ c-- c-!
  c4-> c-. c2-_
}
@end lilypond

Las reglas para la colocación predeterminada de las articulaciones se
encuentran definidas en el archivo @file{scm/script.scm}.  Las
articulaciones y ornamentos se pueden colocar manualmente por encima o
por debajo del pentagrama; véase @ref{Dirección y posición}.

Las articulaciones son objetos @code{Script}.  Sus propiedades se
describen de forma más completa en @rinternals{Script}.

Las articulaciones se pueden adjuntar a los silencios así como a
las notas, pero no se pueden adjuntar a silencions multicompás.
Está disponible una instrucción predefinida especial,
@code{\fermataMarkup}, para adosar un calderón a un silencio
multicompás (y sólo a un silencio multicompás).  La instrucción
crea un objeto @code{MultiMeasureRestText}.

@lilypond[verbatim,quote,fragment]
\override Script.color = #red
\override MultiMeasureRestText.color = #blue
a'2\fermata r\fermata
R1\fermataMarkup
@end lilypond

Además de articulaciones, se pueden adjuntar textos y elementos de
marcado a las notas.  Véase @ref{Guiones de texto}.

Para ver más información acerca de la ordenación de los elementos
Script y TextScript que se adjuntan a las notas, consulte
@rlearning{Colocación de los objetos}.

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{modifying-default-values-for-articulation-shorthand-notation.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{controlling-the-vertical-ordering-of-scripts.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{creating-a-delayed-turn.ly}

@seealso
Glosario musical:
@rglos{tenuto},
@rglos{accent},
@rglos{staccato},
@rglos{portato}.

Manual de aprendizaje:
@rlearning{Colocación de los objetos}.

Referencia de la notación:
@ref{Guiones de texto},
@ref{Dirección y posición},
@ref{Lista de articulaciones},
@ref{Trinos}.

Archivos instalados:
@file{scm/script.scm}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Script},
@rinternals{TextScript}.


@node Matices dinámicos
@unnumberedsubsubsec Matices dinámicos
@translationof Dynamics

@cindex dinámica
@cindex matices absolutos
@cindex matices
@cindex absolutos, matices
@funindex \pppp
@funindex \ppp
@funindex \pp
@funindex \p
@funindex \mp
@funindex \mf
@funindex \f
@funindex \ff
@funindex \fff
@funindex \ffff
@funindex \fffff
@funindex \fp
@funindex \sf
@funindex \sff
@funindex \sp
@funindex \spp
@funindex \sfz
@funindex \rfz

Las marcas dinámicas de matiz absoluto se especifican usando una
instrucción después de una nota: @code{c4\ff}.  Las marcas
dinámicas disponibles son @code{\ppppp}, @code{\pppp},
@code{\ppp}, @code{\pp}, @code{\p}, @code{\mp}, @code{\mf},
@code{\f}, @code{\ff}, @code{\fff}, @code{\ffff}, @code{\fffff},
@code{\fp}, @code{\sf}, @code{\sff}, @code{\sp}, @code{\spp},
@code{\sfz} y @code{\rfz}.  Las indicaciones dinámicas se pueden
colocar manualmente por encima o por debajo del pentagrama; para
ver más detalles, consulte @ref{Dirección y posición}.

@lilypond[verbatim,quote]
\relative c'' {
  c2\ppp c\mp
  c2\rfz c^\mf
  c2_\spp c^\ff
}
@end lilypond

@cindex regulador
@cindex crescendo
@cindex decrescendo
@cindex diminuendo

@funindex \<
@funindex \>
@funindex \!
@funindex \cr
@funindex \decr

Una indicación de @notation{crescendo} se comienza con @code{\<} y
se termina con @code{\!}, con un matiz absoluto o con otra
indicación de crescendo o de decrescendo.  Una indicación de
@notation{decrescendo} comienza con @code{\>} y se termina también
con @code{\!}, con un matiz dinámico absoluto o con otra
indicación de crescendo o de decrescendo.  Se pueden usar
@code{\cr} y @code{\decr} en lugar de @code{\<} y @code{\>}.  De
forma predeterminada, se tipografían reguladores en ángulo cuando
se utiliza esta notación.

@lilypond[verbatim,quote]
\relative c'' {
  c2\< c\!
  d2\< d\f
  e2\< e\>
  f2\> f\!
  e2\> e\mp
  d2\> d\>
  c1\!
}
@end lilypond

Un regulador terminado mediante @code{\!} finaliza en el borde
derecho de la nota que lleva el @code{\!} adosado.  En el caso en
que esté terminado con el comienzo de otra indicación
@notation{crescendo} o @notation{decrescendo}, terminará en el
centro de la nota que tiene adosada la siguiente indicación
@code{\<} ó @code{\>}.  El regulador siguiente empezará entonces
en el borde derecho de la misma nota en lugar del borde izquierdo,
como sería usual si hubiese terminado con @code{\!}  previamente.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\< a | c4 a c\! a\< | c4 a c a\!
}
@end lilypond

Los reguladores que terminan con indicaciones dinámicas absolutas
en lugar de con @code{\!} también se tipografían de manera
parecida.  Sin embargo, la longitud de la propia indicación
dinámica puede alterar el punto en que finaliza el regulador
anterior.

@lilypond[verbatim,quote]
\relative {
  c''1\< | c4 a c\mf a | c1\< | c4 a c\ffff a
}
@end lilypond

@cindex varios matices sobre una nota
@cindex matices, varios sobre una nota
@cindex dinámica, varias indicaciones sobre una nota

Se requieren silencios espaciadores para tipografiar varias
indicaciones dinámicas sobre una sola nota.  Esto es útil
especialmente para añadir un @notation{crescendo} y un
@notation{decrescendo} a la misma nota:

@lilypond[verbatim,quote]
\relative {
  c''4\< c\! d\> e\!
  << f1 { s4 s4\< s4\> s4\! } >>
}
@end lilypond

@cindex espressivo, articulación

@funindex \espressivo

Se puede usar la instrucción @code{\espressivo} para indicar un
crescendo y un decrescendo sobre la misma nota.  Sin embargo,
advierta que esta indicación está implementada como una
articulación, no como una expresión dinámica.

@lilypond[verbatim,quote]
\relative {
  c''2 b4 a
  g1\espressivo
}
@end lilypond

@funindex \cresc
@funindex \decresc
@funindex \dim

Las indicaciones de crescendo textuales se inician con
@code{\cresc}.  Los decrescendos textuales se inician con
@code{\decresc} o con @code{\dim}.  Se trazan líneas extensoras
cuando es necesario.

@lilypond[verbatim,quote]
\relative {
  g'8\cresc a b c b c d e\mf |
  f8\decresc e d c e\> d c b |
  a1\dim ~ |
  a2. r4\! |
}
@end lilypond

@funindex \crescTextCresc
@funindex \dimTextDecresc
@funindex \dimTextDecr
@funindex \dimTextDim
@funindex \crescHairpin
@funindex \dimHairpin

También pueden sustituirse los reguladores gráficos
por cambios de dinámica textuales:
@lilypond[verbatim,quote]
\relative c'' {
  \crescTextCresc
  c4\< d e f\! |
  \dimTextDecresc
  g4\> e d c\! |
  \dimTextDecr
  e4\> d c b\! |
  \dimTextDim
  d4\> c b a\! |
  \crescHairpin
  \dimHairpin
  c4\< d\! e\> d\! |
}
@end lilypond


Para crear nuevas indicaciones de matiz absoluto o de texto que
deba alinearse con los matices; véase
@ref{Indicaciones dinámicas contemporáneas}.

@cindex matices, posición vertical
@cindex dinámica, posición vertical
@cindex vertical, posición, de las indicaciones dinámicas
@funindex DynamicLineSpanner

La colocación vertical de las indicaciones de dinámica se maneja
por parte de @rinternals{DynamicLineSpanner}.

@funindex \dynamicUp
@funindex \dynamicDown
@funindex \dynamicNeutral

Está disponible un contexto @code{Dynamics} para tipografiar las
indicaciones de matiz dinámico en su propia línea horizontal.
Utilice silencios de separación para indicar los tiempos (las
notas que están dentro de un contexto @code{Dynamics} también
ocupan tiempo musical, pero no se imprimen).  El contexto
@code{Dynamics} puede contener otros elementos como inscripciones
textuales, objetos extensores de texto e indicaciones de pedal de
piano.

@lilypond[verbatim,quote]
<<
  \new Staff \relative {
    c'2 d4 e |
    c4 e e,2 |
    g'4 a g a |
    c1 |
  }
  \new Dynamics {
    s1\< |
    s1\f |
    s2\dim s2-"rit." |
    s1\p |
  }
>>
@end lilypond

@predefined
@code{\dynamicUp},
@code{\dynamicDown},
@code{\dynamicNeutral},
@code{\crescTextCresc},
@code{\dimTextDim},
@code{\dimTextDecr},
@code{\dimTextDecresc},
@code{\crescHairpin},
@code{\dimHairpin}.
@endpredefined


@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{setting-hairpin-behavior-at-bar-lines.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{setting-the-minimum-length-of-hairpins.ly}

@cindex al niente
@cindex niente, al

@lilypondfile[verbatim,quote,texidoc,doctitle]
{printing-hairpins-using-al-niente-notation.ly}

@cindex Ferneyhough, reguladores de
@cindex reguladores de Ferneyhough
@cindex reguladores acampanados
@cindex acampanados, reguladores
@cindex reguladores de tipo constante
@cindex constante, reguladores de tipo

@lilypondfile[verbatim,quote,texidoc,doctitle]
{printing-hairpins-in-various-styles.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{vertically-aligned-dynamics-and-textscripts.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{hiding-the-extender-line-for-text-dynamics.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{changing-text-and-spanner-styles-for-text-dynamics.ly}

@seealso
Glosario musical:
@rglos{al niente},
@rglos{crescendo},
@rglos{decrescendo},
@rglos{hairpin}.

Manual de aprendizaje:
@rlearning{Articulaciones y matices dinámicos}.

Referencia de la notación:
@ref{Dirección y posición},
@ref{Indicaciones dinámicas contemporáneas},
@ref{Enriquecimiento de la salida MIDI},
@ref{Control de las dinámicas del MIDI}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{DynamicText},
@rinternals{Hairpin},
@rinternals{DynamicLineSpanner},
@rinternals{Dynamics}.


@node Indicaciones dinámicas contemporáneas
@unnumberedsubsubsec Indicaciones dinámicas contemporáneas
@translationof New dynamic marks

@cindex indicaciones dinámicas nuevas
@cindex dinámicas, indicaciones, nuevas

La manera más fácil de crear indicaciones dinámicas es usar
objetos de marcado (@code{\markup}).

@lilypond[verbatim,quote]
moltoF = \markup { molto \dynamic f }

\relative {
  <d' e>16_\moltoF <d e>
  <d e>2..
}
@end lilypond

@cindex dinámicas indicaciones editoriales
@cindex dinámicas, indicaciones entre paréntesis
@cindex editoriales, indicaciones dinámicas
@funindex \bracket
@funindex \dynamic

En el modo de marcado se pueden crear indicaciones dinámicas
editoriales (entre paréntesis o corchetes).  La sintaxis del modo
de marcado se describe en @ref{Formatear el texto}.

@lilypond[verbatim,quote]
roundF = \markup {
    \center-align \concat { \bold { \italic ( }
           \dynamic f \bold { \italic ) } } }
boxF = \markup { \bracket { \dynamic f } }
\relative {
  c'1_\roundF
  c1_\boxF
}
@end lilypond

@cindex make-dynamic-script
@funindex make-dynamic-script

Las indicaciones dinámicas sencillas y centradas se crean
fácilmente con la función @code{make-dynamic-script}.

@lilypond[verbatim,quote]
sfzp = #(make-dynamic-script "sfzp")
\relative {
  c'4 c c\sfzp c
}
@end lilypond

En general @code{make-dynamic-script} toma cualquier objeto de
marcado como argumento.  La fuente tipográfica de matices sólo
contiene los caracteres @code{f, m, p, r, s} y @code{z}, por lo
que si se desea obtener una indicación dinámica que incluya texto
normal o signos de puntuación, es necesario utilizar instrucciones
de marcado que devuelvan los ajustes de la familia de fuente
tipográfica y su codificación a las del texto normal, por ejemplo
@code{\normal-text}.  El interés de la utilización de
@code{make-dynamic-script} en lugar de un elemento de marcado
corriente está en asegurar la alineación vertical de los objetos
de marcado y reguladores que se aplican a la misma cabeza de nota.

@lilypond[verbatim,quote]
roundF = \markup { \center-align \concat {
           \normal-text { \bold { \italic ( } }
           \dynamic f
           \normal-text { \bold { \italic ) } } } }
boxF = \markup { \bracket { \dynamic f } }
mfEspress = \markup { \center-align \line {
              \hspace #3.7 mf \normal-text \italic espress. } }
roundFdynamic = #(make-dynamic-script roundF)
boxFdynamic = #(make-dynamic-script boxF)
mfEspressDynamic = #(make-dynamic-script mfEspress)
\relative {
  c'4_\roundFdynamic\< d e f
  g,1~_\boxFdynamic\>
  g1
  g'1~\mfEspressDynamic
  g1
}
@end lilypond

Se puede utilizar en su lugar la forma Scheme del modo de marcado.
Su sintaxis se explica en @rextend{Construcción del marcado en
Scheme}.

@lilypond[verbatim,quote]
moltoF = #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF
}
@end lilypond

Para alinear el texto del matiz dinámico a la izquierda en lugar
de centrarlo sobre una nota, utilice un @code{\tweak}:

@lilypond[verbatim,quote]
moltoF = \tweak DynamicText.self-alignment-X #LEFT
         #(make-dynamic-script
            (markup #:normal-text "molto"
                    #:dynamic "f"))
\relative {
  <d' e>16 <d e>
  <d e>2..\moltoF <d e>1
}
@end lilypond

Los ajustes para las fuentes tipográficas en el modo de marcado se
describen en @ref{Seleccionar la tipografía y su tamaño}.

@seealso
Referencia de la notación:
@ref{Formatear el texto},
@ref{Seleccionar la tipografía y su tamaño},
@ref{Enriquecimiento de la salida MIDI},
@ref{Control de las dinámicas del MIDI}.

Extender LilyPond:
@rextend{Construcción del marcado en Scheme}.

Fragmentos de código:
@rlsr{Expressive marks}.


@node Expresiones como curvas
@subsection Expresiones como curvas
@translationof Expressive marks as curves

Esta sección explica cómo crear varias marcas expresivas de forma
curva: ligaduras de expresión y de fraseo, respiraciones, caídas y
elevaciones de tono.

@menu
* Ligaduras de expresión::
* Ligaduras de fraseo::
* Marcas de respiración::
* Caídas y elevaciones::
@end menu


@node Ligaduras de expresión
@unnumberedsubsubsec Ligaduras de expresión
@translationof Slurs

@cindex ligaduras de expresión

Las @notation{Ligaduras de expresión} se introducen utilizando
paréntesis:

@warning{En música polifónica, las ligaduras de expresión deben
terminar en la misma voz en la que empiezan.}

@lilypond[verbatim,quote]
\relative {
  f''4( g a) a8 b(
  a4 g2 f4)
  <c e>2( <b d>2)
}
@end lilypond

@cindex ligaduras de expresión, posicionamiento manual
@cindex ligaduras de expresión, debajo de las notas
@cindex ligaduras de expresión, encima de las notas
@funindex \slurDown
@funindex \slurNeutral

Las ligaduras de expresión se pueden colocar manualmente por
encima o por debajo de las notas; véase
@ref{Dirección y posición}.

@cindex fraseo, ligadura de
@cindex varias ligaduras de expresión
@cindex simultáneas, ligaduras de expresión
@cindex ligadura de fraseo
@cindex ligaduras de expresión, varias
@cindex ligaduras de expresión simultáneas

Debe tenerse cuidado con las ligaduras de expresión simultáneas o
superpuestas.  En casi todos los casos, las ligaduras de expresión
externas indican, ciertamente, fraseo, y las ligaduras de fraseo
pueden superponerse a las ligaduras de expresión normales, véase
@ref{Ligaduras de fraseo}.  Cuando se necesitan varias ligaduras
de expresión normales dentro de una sola voz, los comienzos y
finales correspondientes de las ligaduras deben etiquetarse
precediéndolos por @code{\=} seguido de un número o cadena de
caracteres que la identifique.

@lilypond[verbatim,quote]
\fixed c' {
  <c~ f\=1( g\=2( >2 <c e\=1) a\=2) >
}
@end lilypond

@cindex ligadura de expresión, estilo
@cindex ligadura continua
@cindex ligadura de puntos
@cindex ligadura discontinua
@cindex continua, ligadura
@cindex discontinua, ligadura
@cindex puntos, ligadura de
@cindex estilo de la ligadura

@funindex \slurDashed
@funindex \slurDotted
@funindex \slurSolid

Las ligaduras de expresión pueden ser continuas, discontinuas o de
puntos.  El estilo predeterminado de las ligaduras de expresión es
el continuo:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashed
  g4( e c2)
  \slurDotted
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@cindex ligadura de expresión, mitad continua y mitad discontinua

@funindex \slurHalfDashed
@funindex \slurHalfSolid

También se puede hacer que las ligaduras de expresión sean
semi-discontinuas (la primera mitad discontinua y la segunda mitad
continua) o semi-continuas (la primera mitad continua y la segunda
discontinua):

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurHalfDashed
  g4( e c2)
  \slurHalfSolid
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond

@cindex ligadura de expresión, definir patrones de discontinuidad

@funindex \slurDashPattern

Se pueden definir patrones de discontinuidad para las ligaduras de
expresión:

@lilypond[verbatim,quote]
\relative {
  c'4( e g2)
  \slurDashPattern #0.7 #0.75
  g4( e c2)
  \slurDashPattern #0.5 #2.0
  c4( e g2)
  \slurSolid
  g4( e c2)
}
@end lilypond


@funindex \slurUp


@predefined
@code{\slurUp},
@code{\slurDown},
@code{\slurNeutral},
@code{\slurDashed},
@code{\slurDotted},
@code{\slurHalfDashed},
@code{\slurHalfSolid},
@code{\slurDashPattern},
@code{\slurSolid}.
@endpredefined


@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{using-double-slurs-for-legato-chords.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{positioning-text-markups-inside-slurs.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{making-slurs-with-complex-dash-structure.ly}

@seealso
Glosario musical:
@rglos{slur}.

Manual de aprendizaje:
@rlearning{Acerca de la no anidabilidad de llaves y ligaduras}.

Referencia de la notación:
@ref{Dirección y posición},
@ref{Ligaduras de fraseo}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Slur}.


@node Ligaduras de fraseo
@unnumberedsubsubsec Ligaduras de fraseo
@translationof Phrasing slurs

@cindex ligaduras de fraseo
@cindex marcas de fraseo
@cindex fraseo, ligaduras de
@cindex fraseo, marcas de
@funindex \(
@funindex \)

Las @notation{ligaduras de fraseo} (o marcas de fraseo) que
indican una frase musical se escriben usando las instrucciones
@code{\(} y @code{\)} respectivamente:

@lilypond[verbatim,quote]
\relative {
  c''4\( d( e) f(
  e2) d\)
}
@end lilypond

@funindex \phrasingSlurUp
@funindex \phrasingSlurDown
@funindex \phrasingSlurNeutral

Tipográficamente, la ligadura de fraseo se comporta casi
exactamente igual que una ligadura de expresión normal.  Sin
embargo, se tratan como objetos diferentes.  Una @code{\slurUp} no
tendrá ningún efecto sobre una ligadura de fraseo.  El fraseo se
puede situar manualmente por encima o por debajo de las notas;
véase @ref{Dirección y posición}.

@cindex simultáneas, ligaduras de fraseo
@cindex varias ligaduras de fraseo
@cindex ligaduras de fraseo simultáneas
@cindex ligaduras de fraseo, varias
@cindex fraseo, ligaduras de, simultáneas
@cindex fraseo, ligaduras de, varias

Las ligaduras de fraseo simultáneas o superpuestas se introducen
usando @code{\=} igual que se hace con las ligaduras de expresión
normales, véase @ref{Ligaduras de expresión}.

@cindex fraseo, ligaduras de, discontinuas
@cindex discontinuas, ligaduras de fraseo
@cindex fraseo, ligaduras de, punteadas
@cindex punteadas, ligaduras de fraseo
@cindex ligaduras de fraseo discontinuas
@cindex ligaduras de fraseo punteadas

@funindex \phrasingSlurDashed
@funindex \phrasingSlurDotted
@funindex \phrasingSlurSolid

Las ligaduras de fraseo pueden ser continuas, de puntos o de
rayas.  El estilo predeterminado para las ligaduras de fraseo es
el continuo:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashed
  g4\( e c2\)
  \phrasingSlurDotted
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@cindex fraseo, ligadura de, mitad continua y mitad discontinua
@cindex ligadura de fraseo mitad continua y mitad discontinua

@funindex \phrasingSlurHalfDashed
@funindex \phrasingSlurHalfSolid

Se puede hacer también que las ligaduras de fraseo sean
semi-discontinuas (la primera mitad discontinua y la segunda mitad
continua) o semi-continuas (la primera mitad continua y la segunda
mitad discontinua):

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurHalfDashed
  g4\( e c2\)
  \phrasingSlurHalfSolid
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

@cindex fraseo, ligadura de, definir patrones de discontinuidad
@cindex ligadura de fraseo, definir patrones de discontinuidad

@funindex \phrasingSlurDashPattern

Se pueden definir patrones de discontinuidad para las ligaduras de
fraseo:

@lilypond[verbatim,quote]
\relative {
  c'4\( e g2\)
  \phrasingSlurDashPattern #0.7 #0.75
  g4\( e c2\)
  \phrasingSlurDashPattern #0.5 #2.0
  c4\( e g2\)
  \phrasingSlurSolid
  g4\( e c2\)
}
@end lilypond

Las definiciones de patrones de discontinuidad tienen la misma
estructura que las definiciones de patrones de discontinuidad de
las ligaduras de expresión.  Para ver más información acerca de
patrones de discontinuidad complejos, consulte los fragmentos de
código bajo @ref{Ligaduras de expresión}.

@predefined
@code{\phrasingSlurUp},
@code{\phrasingSlurDown},
@code{\phrasingSlurNeutral},
@code{\phrasingSlurDashed},
@code{\phrasingSlurDotted},
@code{\phrasingSlurHalfDashed},
@code{\phrasingSlurHalfSolid},
@code{\phrasingSlurDashPattern},
@code{\phrasingSlurSolid}.
@endpredefined

@seealso
Manual de aprendizaje:
@rlearning{Acerca de la no anidabilidad de llaves y ligaduras}.

Referencia de la notación:
@ref{Dirección y posición},
@ref{Ligaduras de expresión}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{PhrasingSlur}.


@node Marcas de respiración
@unnumberedsubsubsec Marcas de respiración
@translationof Breath marks

@cindex respiraciones
@cindex pausa, marcas de
@funindex \breathe

Las respiraciones se introducen utilizando @code{\breathe}:

@lilypond[verbatim,quote]
{ c''2. \breathe d''4 }
@end lilypond

A diferencia de otras marcas de expresión, los símbolos de
respiración no están asociados con la nota anterior, sino que son
eventos independientes.  Por ello, todas las marcas de expresión
que están adjuntas a la nota anterior, cualquier corchete recto
que indique barrado manual, y cualquier paréntesis que indique
ligaduras de expresión y de fraseo, deben escribirse antes de
@code{\breathe}.

Las marcas de respiración dan por terminadas las barras
automáticas; para sobreescribir este comportamiento, consulte
@ref{Barras manuales}.

@lilypond[verbatim,quote]
\relative { c''8 \breathe d e f g2 }
@end lilypond

Están contemplados los indicadores musicales para las marcas de
respiración en la notación antigua, o divisiones.  Para ver más
detalles, consulte @ref{Divisiones}.

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{changing-the-breath-mark-symbol.ly}

@cindex marca de pulso

@lilypondfile[verbatim,quote,texidoc,doctitle]
{using-a-tick-as-the-breath-mark-symbol.ly}

@cindex caesura
@cindex cesura

@lilypondfile[verbatim,quote,texidoc,doctitle]
{inserting-a-caesura.ly}

@seealso
Glosario musical:
@rglos{caesura}.

Referencia de la notación:
@ref{Divisiones}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{BreathingEvent},
@rinternals{BreathingSign},
@rinternals{Breathing_sign_engraver}.


@node Caídas y elevaciones
@unnumberedsubsubsec Caídas y elevaciones
@translationof Falls and doits

@cindex falls (caídas de tono)
@cindex doits (elevaciones de tono)
@cindex caídas de tono (falls)
@cindex elevaciones de tono (doits)
@funindex \bendAfter

Se pueden expresar @notation{caídas} y @notation{subidas} de tono
(falls y doits) añadidas a las notas mediante la instrucción
@code{\bendAfter}. La dirección de la caída o elevación se indica
con un signo más o menos (arriba o abajo).  El número indica el
intervalo de alturas sobre el que se extiende la caída o elevación
@emph{partiendo de} la nota principal.

@lilypond[verbatim,quote]
\relative c'' {
  c2\bendAfter #+4
  c2\bendAfter #-4
  c2\bendAfter #+6.5
  c2\bendAfter #-6.5
  c2\bendAfter #+8
  c2\bendAfter #-8
}
@end lilypond

@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{adjusting-the-shape-of-falls-and-doits.ly}

@seealso
Glosario musical:
@rglos{fall},
@rglos{doit}.

Fragmentos de código:
@rlsr{Expressive marks}.


@node Expresiones como líneas
@subsection Expresiones como líneas
@translationof Expressive marks as lines

Esta sección explica cómo crear diversas marcas de expresión que
siguen un camino lineal: glissandi, arpegios y trinos.

@menu
* Glissando::
* Arpegio::
* Trinos::
@end menu


@node Glissando
@unnumberedsubsubsec Glissando
@translationof Glissando

@cindex glissando
@funindex \glissando

Se crea un @notation{glissando} añadiendo @code{\glissando}
después de la nota:

@lilypond[verbatim,quote]
\relative {
  g'2\glissando g'
  c2\glissando c,
  \afterGrace f,1\glissando f'16
}
@end lilypond

Un glissando puede conectar notas de un pentagrama a otro:

@lilypond[verbatim,quote]
\new PianoStaff <<
  \new Staff = "right" {
    e'''2\glissando
    \change Staff = "left"
    a,,4\glissando
    \change Staff = "right"
    b''8 r |
  }
  \new Staff = "left" {
    \clef bass
    s1
  }
>>
@end lilypond

Un glissando puede conectar las notas dentro de un acorde.  Si se
necesita hacer algo que no sea una conexión de una nota con otra
entre los dos acordes, las conexiones entre las notas vienen
definidas por medio de @code{\glissandoMap}, donde las notas de un
acorde se suponen numeradas, empezando en cero, en el orden en que
aparecen en el código de entrada del archivo @file{.ly}.

@lilypond[verbatim,quote]
\relative {
  <c' e>1\glissando g' |
  <c, e>1\glissando |
  <g' b> |
  \break
  \set glissandoMap = #'((0 . 1) (1 . 0))
  <c, g'>1\glissando |
  <d a'> |
  \set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))
  c1\glissando |
  <d f a> |
  \set glissandoMap = #'((2 . 0) (1 . 0) (0 . 1))
  <f d a'>1\glissando |
  <c c'> |
}
@end lilypond

Se pueden crear distintos tipos de glissando.  Para ver más
detalles, consulte @ref{Estilos de línea}.

@snippets
@lilypondfile[verbatim,quote,texidoc,doctitle]
{contemporary-glissando.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{adding-timing-marks-to-long-glissandi.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{making-glissandi-breakable.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{extending-glissandi-across-repeats.ly}

@seealso
Glosario musical:
@rglos{glissando}.

Referencia de la notación:
@ref{Estilos de línea}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Glissando}.

@knownissues
La impresión de texto sobre la línea (como @notation{gliss.}) no
está contemplada.


@node Arpegio
@unnumberedsubsubsec Arpegio
@translationof Arpeggio

@cindex arpegio
@cindex acorde quebrado
@cindex acorde arpegiado
@cindex quebrado, acorde
@funindex \arpeggio
@funindex \arpeggioArrowUp
@funindex \arpeggioArrowDown
@funindex \arpeggioNormal

Un signo de @notation{acorde arpegiado} (conocido también como
acorde quebrado) sobre un acorde, se denota adjuntando
@code{\arpeggio} al acorde:

@lilypond[verbatim,quote]
\relative { <c' e g c>1\arpeggio }
@end lilypond

Se pueden escribir distintos tipos de acordes arpegiados.
@code{\arpeggioNormal} produce la vuelta al arpegio normal:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2\arpeggio

  \arpeggioArrowUp
  <c e g c>2\arpeggio

  \arpeggioArrowDown
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

@cindex arpegiado, acorde, símbolos especiales
@cindex especial, símbolos de arpegio

@funindex \arpeggioBracket
@funindex \arpeggioParenthesis
@funindex \arpeggioParenthesisDashed

Se pueden crear símbolos especiales de arpegio @emph{con corchete}:

@lilypond[verbatim,quote]
\relative {
  <c' e g c>2

  \arpeggioBracket
  <c e g c>2\arpeggio

  \arpeggioParenthesis
  <c e g c>2\arpeggio

  \arpeggioParenthesisDashed
  <c e g c>2\arpeggio

  \arpeggioNormal
  <c e g c>2\arpeggio
}
@end lilypond

Las propiedades de discontinuidad del paréntesis del arpegio se
controlan mediante la propiedad @code{'dash-definition}, que se
describe en @ref{Ligaduras de expresión}.

Los acordes arpegiados se pueden desarrollar explícitamente
utilizando @notation{ligaduras de unión}.  Véase
@ref{Ligaduras de unión}.

@predefined
@code{\arpeggio},
@code{\arpeggioArrowUp},
@code{\arpeggioArrowDown},
@code{\arpeggioNormal},
@code{\arpeggioBracket},
@code{\arpeggioParenthesis}
@code{\arpeggioParenthesisDashed}.
@endpredefined


@snippets

@lilypondfile[verbatim,quote,texidoc,doctitle]
{creating-cross-staff-arpeggios-in-a-piano-staff.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{creating-cross-staff-arpeggios-in-other-contexts.ly}

@lilypondfile[verbatim,quote,texidoc,doctitle]
{creating-arpeggios-across-notes-in-different-voices.ly}

@seealso
Glosario musical:
@rglos{arpeggio}.

Referencia de la notación:
@ref{Ligaduras de expresión},
@ref{Ligaduras de unión}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{Arpeggio},
@rinternals{Slur},
@rinternals{PianoStaff}.

@knownissues
@cindex pentagrama cruzado, arpegios con paréntesis
@cindex arpegio de pentagrama cruzado con paréntesis
@cindex arpegio con paréntesis de pentagrama cruzado

No es posible mezclar arpegios conectados y no conectados en un
@code{PianoStaff} en el mismo instante de tiempo.

La forma sencilla de especificar el corchete en los arpegios de
paréntesis no funciona para los arpegios de pentagrama cruzado;
see @ref{Plicas de pentagrama cruzado}.


@node Trinos
@unnumberedsubsubsec Trinos
@translationof Trills

@cindex trinos
@funindex \trill
@funindex \startTrillSpan
@funindex \stopTrillSpan

Los trinos cortos sin línea extensora se imprimen con
@code{\trill}; véase @ref{Articulaciones y ornamentos}.

Los @notation{trinos} largos mantenidos, con línea de extensión, se
hacen con @code{\startTrillSpan} y @code{\stopTrillSpan}:

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

Un trino extendido que atraviesa un salto de línea recomienza
exactamente encima de la primera nota de la nueva línea.

@lilypond[ragged-right,verbatim,quote]
\relative {
  d''1\startTrillSpan
  \break
  d1
  c2\stopTrillSpan
  r2
}
@end lilypond

Los trinos extendidos consecutivos funcionan sin necesidad de
instrucciones @code{\stopTrillSpan} explícitas, porque cada trino
se convertirá automáticamente en el borde derecho del trino
anterior.

@lilypond[verbatim,quote]
\relative {
  d''1\startTrillSpan
  d1
  b1\startTrillSpan
  d2\stopTrillSpan
  r2
}
@end lilypond

También se pueden combinar los trinos con notas de adorno.
La sintaxis de esta construcción y el método para colocar
las notas de adorno con precisión están descritos en
@ref{Notas de adorno}.

@lilypond[verbatim,quote]
\relative {
  d''1~\afterGrace
  d1\startTrillSpan { c32[ d]\stopTrillSpan }
  c2 r2
}
@end lilypond

@cindex trinos de nota explícita
@cindex explícita, trinos de nota
@funindex \pitchedTrill

Los trinos que se tienen que ejecutar sobre notas auxiliares
explícitas se pueden tipografiar con la instrucción
@code{pitchedTrill}.  El primer argumento es la nota principal, y
el segundo es la nota @emph{trinada}, que se imprime como una
cabeza de nota, sin plica y entre paréntesis.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  d''2\startTrillSpan fis
  d2
  c2\stopTrillSpan
  r2
}
@end lilypond

@cindex trino con nota y alteración
@cindex alteración, trino con

Es necesario añadir manualmente las alteraciones subsiguientes de
la misma nota dentro del mismo compás.  Sólo se imprime la
alteración del primer trino con nota, dentro de un compás.

@lilypond[verbatim,quote]
\relative {
  \pitchedTrill
  eis''4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan cis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis
  eis4\stopTrillSpan
  \pitchedTrill
  eis4\startTrillSpan fis!
  eis4\stopTrillSpan
}
@end lilypond


@predefined
@code{\startTrillSpan},
@code{\stopTrillSpan}.
@endpredefined

@seealso
Glosario musical:
@rglos{trill}.

Referencia de la notación:
@ref{Articulaciones y ornamentos},
@ref{Notas de adorno}.

Fragmentos de código:
@rlsr{Expressive marks}.

Referencia de funcionamiento interno:
@rinternals{TrillSpanner}.
