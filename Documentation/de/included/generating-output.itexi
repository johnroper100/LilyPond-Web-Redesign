@c -*- coding: utf-8; mode: texinfo; documentlanguage: de -*-
@c This file is part of web/download.itexi and
@c learning/tutorial.itely

@ignore
    Translation of GIT committish: c1df40da9f8b2794e173583c363f9e736e5531bd

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes.
@end ignore

@c This is about "compiling" a lilypond file
@c (Learning 1 Tutorial), **not** compiling the
@c source code.

@macro lilypadOSX
@warning{Diese Anweisungen gehen davon aus, dass Sie die
LilyPond-Application benutzen.  Wenn Sie eins der Programme benutzen, die in @rweb{Leichteres Editieren} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}


@subsubheading 1. Schritt: Erstellen Sie eine @file{.ly}-Datei

Wenn Sie das @command{LilyPond.app}-Symbol doppelt klicken, öffnet
sich eine Beispiel-Datei.

@sourceimage{Learning_Macos_welcome,,,}

Wählen Sie aus den Menüs oben links auf Ihrem Bildschirm
@w{@code{File > Save}}.

@sourceimage{Learning_Macos_Save_menu,,,}

Wählen Sie einen Namen für die Datei, etwa @file{test.ly}.

@sourceimage{Learning_Macos_Save_file_with_name,,,}


@subsubheading 2. Schritt: Kompilieren (mit LilyPad)

Aus den selben Menüs wählen Sie jetzt @w{@code{Compile > Typeset}}.

@sourceimage{Learning_Macos_Typeset_menu,,,}

Ein neues Fenster öffnet sich, in dem ein Fortschrittslog der
Kompilation der von ihnen gerade gespeicherten Datei gezeigt
wird.

@sourceimage{Learning_Macos_Compiling_log,,,}


@subsubheading 3. Schritt: Ausgabe anschauen

Wenn die Kompilation fertig ist, wird ein PDF mit dem gleichen
Namen wie das Original erstellt und automatisch mit dem
Standard-PDF-Programm geöffnet und angezeigt.

@sourceimage{Learning_Macos_pdf_output,,,}


@subsubheading Andere Befehle

Um neue LilyPond-Dateien zu erstellen beginnen sie mit
@w{@code{File > New}}

@sourceimage{Learning_Macos_New_menu,,,}

@noindent
oder @w{@code{File > Open}} um eine schon existierende Datei zu
öffnen und zu editieren.

@sourceimage{Learning_Macos_Open_menu,,,}

Sie müssen alle Änderungen an der Datei zuerst speichern, bevor Sie
wieder @w{@code{Compile > Tyepset}} wählen.  Wenn das PDF nicht
erscheint, schauen Sie im Fortschrittslog nach Fehlern.

Wenn Sie nicht das Standard-PDF-Programm benutzen, das automatisch
bei Mac OS X dabei ist, und Sie die PDF-Datei noch von einer vorigen
Kompilation geöffnet haben, können weitere Kompilationen fehlschlagen,
bis Sie das Original-PDF schließen.



@end macro


@macro lilypadWindows
@warning{Diese Anweisungen gehen davon aus, dass Sie den installierten
LilyPad-Editor benutzen.  Wenn Sie eins der Programme benutzen, die in
@rweb{Leichteres Editieren} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}


@subsubheading 1. Schritt: Erstellen Sie eine @file{.ly}-Datei

Wenn sie auf das LilyPond-Symbol auf dem Desktop doppelklicken,
öffnet sich ein einfacher Texteditor mit einer Beispieldatei.

@sourceimage{LilyPad,,,}

Aus dem Menü über der Beispieldatei wählen Sie @w{@code{File > Save as}}.
Benutzen Sie nicht @w{@code{File > Save}} für die Beispieldatei,
weil die Datei nicht funktioniert, bis Sie sie mit einem eigenen
Namen gespeichert haben.

@sourceimage{FileSave,,,}

Wählen Sie einen Namen für Ihre Datei, etwa @file{test.ly}.

@sourceimage{SaveAs,,,}


@subsubheading Schritt 2a: Kompilieren (mit drag-and-drop)

Sie können nach Belieben die Kompilation starten, indem Sie
entweder:

Die Datei auf das LilyPond-Symbol ziehen.

@sourceimage{DragDrop,,,}

Oder Sie klicken mit der rechten Maustaste auf die Datei und wählen
Sie aus dem Menü @w{@code{Open with > LilyPond}}.

@sourceimage{GenPDF,,,}


@subsubheading Schritt 2b: Kompilieren (mit Doppelklick)

Sie können auch einfach die Datei @file{test.ly} doppelt anklicken.


@subsubheading 3. Schritt: Ausgabe anschauen

Während der Kompilation von @file{test.ly} öffnet sich ein
Kommandofenster sehr schnell und schließt sich wieder.  Drei
zusätzliche Dateien werden in diesem Schritt erstellt.

Das PDF enthält den Notensatz aus der Datei @file{test.ly}.

@sourceimage{PDFRead,,,}


@subsubheading Andere Befehle

Um eine neue Datei zu erstellen, wählen Sie @w{@code{File > New}}
aus irgendeiner schon erstellten Datei oder @w{@code{File > Open}},
um eine Datei zu öffnen und zu bearbeiten, die Sie schon vorher
gespeichert hatten.

@sourceimage{EditFile,,,}

Sie müssen jede neue Änderung erst speichern, bevor Sie die Datei
kompilieren.  Wenn kein PDF erstellt wird, öffnen Sie die Log-Datei
und schauen Sie nach Fehlern.

@sourceimage{BadLog,,,}

Die Log-Datei wird jedes Mal überschrieben, wenn Sie Ihre
LilyPond-Datei kompilieren.

Die PS-Datei wird intern von LilyPond benutzt um das PDF zu erstellen
und kann ignoriert werden.  Sie wird auch jedes Mal neu überschrieben.

Wenn Sie das PDF in einem PDF-Programm anschauen, müssen Sie es
zuerst schließen, bevor Sie eine neue Kompilation durchführen
können, denn es kann einen Fehler bei der Erstellung des neuen
PDFs geben, wenn das alte noch geöffnet ist.




@end macro


@c not lilypad at all, but I ran out of names.  :(
@macro lilypadCommandLine
@warning{Diese Anweisungen gehen davon aus, dass Sie den installierten
LilyPad-Editor benutzen.  Wenn Sie eins der Programme benutzen, die in
@rweb{Leichteres Editieren} beschrieben sind, schauen
Sie bitte in der Dokumentation nach, wenn Sie Probleme damit haben,
eine Datei zu kompilieren.}

@subsubheading Schritt 1: Erstellen Sie eine @file{.ly}-Datei


Erstellen Sie eine Text-Datei mit dem Namen @file{test.ly} und
geben Sie folgenden Text ein:

@c double \\ required because this is inside a macro!
@example
\\version "@w{@versionStable{}}"
@{
@ @ c' e' g' e'
@}
@end example

@subsubheading Schritt 2: Kompilieren (auf der Kommandozeile)

Um die Datei zu kompilieren, geben sie an der Konsole bzw. Kommandozeile

@example
lilypond test.ly
@end example

@noindent
ein.
Sie werden ungefähr folgende Meldungen sehen:


@example
lilypond test.ly
GNU LilyPond  @w{@versionStable{}}
»test.ly« wird verarbeitet
Analysieren...
Interpretation der Musik...
Vorverarbeitung der grafischen Elemente...
Ideale Seitenanzahl wird gefunden...
Musik wird auf eine Seite angepasst...
Systeme erstellen...
Layout nach »test.ps« ausgeben...
Konvertierung nach »test.pdf«...
Erfolg: Kompilation erfolgreich beendet
@end example

@subsubheading 3. Schritt: Ausgabe anschauen

Als Ergebnis erhalten Sie ein @file{test.pdf}, das Sie mit den
Standardprogrammen Ihres Betriebssystemes anschauen können.


@end macro
